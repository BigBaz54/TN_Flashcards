/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.11'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'eu.telecomnancy'
version '1.0-SNAPSHOT'
description 'codingweek-16'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'eu.telecomnancy'
    mainClass = 'eu.telecomnancy.AppLauncher'
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.web']
}


dependencies {
    implementation('com.google:google:5')
    implementation('com.google.code.gson:gson:2.10')
    implementation('org.openjfx:javafx-controls:19')
    implementation('org.openjfx:javafx-fxml:19')
    implementation('org.openjfx:javafx-media:19')
    implementation('org.openjfx:javafx-web:19')
    implementation('org.apache.httpcomponents:httpclient:4.5.10')
    implementation('org.json:json:20090211')
    implementation('org.apache.poi:poi:5.2.3')
    implementation('org.xerial:sqlite-jdbc:3.32.3.3')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude "META-INF/*.SF"
    exclude "META-INF/*.DSA"
    exclude "META-INF/*.RSA"

    manifest {
        attributes "Main-Class": "eu.telecomnancy.AppLauncher"
    }

    from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

