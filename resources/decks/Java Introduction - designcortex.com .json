{
  "cards": [
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-6210522710066.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eUse a while loop and iterator to loop through each property.\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-6326486827104.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u0026nbsp;\u003cdiv\u003e\u003cimg src\u003d\"paste-8572754722856.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eWhat will the output be in the console?\u003c/div\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003eException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 3\u003c/div\u003e\u003cdiv\u003e\u003cspan class\u003d\"Apple-tab-span\" style\u003d\"white-space:pre\"\u003e \u003c/span\u003eat com.designcortex.MyApp.main(MyApp.java:29)\u003c/div\u003e\u003cdiv\u003eJava Result: 1\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-8662949036087.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eWhat will be the output to the console?\u003c/div\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003eException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 2\u003c/div\u003e\u003cdiv\u003e\u003cspan class\u003d\"Apple-tab-span\" style\u003d\"white-space:pre\"\u003e \u003c/span\u003eat com.designcortex.MyApp.main(MyApp.java:29)\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-8796093022246.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eHow do we allow the program to continue running if there is an error in any of these statements (3 commands)?\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-8912057139296.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-9195524980774.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e...then some unknown String is assigned to textVal...\u003c/div\u003e\u003cdiv\u003e...then...\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-9225589751830.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eparseInt could return a NumberFormatException or an ArithmeticException.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWrite code to handle each exception seperately.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-9358733738096.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-9195524980774.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e...then some unknown String is assigned to textVal...\u003c/div\u003e\u003cdiv\u003e...then...\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-9225589751830.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eparseInt could return a NumberFormatException or an ArithmeticException.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWrite code to handle each exception \u003cfont color\u003d\"#008000\"\u003ein the same block without their super class Exception\u003c/font\u003e.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003etry {\u003c/div\u003e\u003cdiv\u003e  val \u003d Integer.parseInt(textVal);\u003c/div\u003e\u003cdiv\u003e} catch (NumberFormatException | ArithmeticException e){\u003c/div\u003e\u003cdiv\u003e  //place holder for logic\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-10037338570888.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAdd a \u003cfont color\u003d\"#008000\"\u003eblock that runs for all caught exceptions\u003c/font\u003e after the blocks for specific exceptions has been executed (one command).\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-10153302687907.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Why is there an error in the following?\u003cdiv\u003e\u003cimg src\u003d\"paste-10230612099234.jpg\" /\u003e\u003c/div\u003e",
      "answer": "catch (Exception e) will catch all exceptions so the NumberFormatException is superfluous as it will never run.\u0026nbsp;",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eIn order to get the following output:\u003c/div\u003e\u003cdiv\u003ez\u003c/div\u003e\u003cdiv\u003eb\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003ereplace the blank in the following:\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-10552734646386.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; _____\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-10595684319299.jpg\" /\u003e\u003c/div\u003e",
      "answer": "throw e;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-10630044057795.jpg\" /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-10896332030092.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWhat would be the polite way to write the \u003cfont color\u003d\"#008000\"\u003efunction definition\u003c/font\u003e for customParseInteger?\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cdiv\u003eUse throws NumberFormatException, ArithmeticException\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eExample:\u003c/div\u003e\u003cimg src\u003d\"paste-11012296147085.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003eThis way the programmer knows if a function is capable of throwing an exception or not and can plan accordingly.\u0026nbsp;\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Why is there an error here,\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-11652246274117.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003ebut not here,\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-11686606012469.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eif parseInt can also throw an exception?\u003c/div\u003e\u003c/div\u003e",
      "answer": "When you throw a new exception and do not catch it, the parent function must have a \u003cfont color\u003d\"#008000\"\u003ethrows\u003c/font\u003e in its function definition.\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eExample:\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-11785390260301.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Will the following not compile?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-11836929867851.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "It will compile fine.\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eIOException inherits from Exception\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Is the following legal, since we are throwing Exception and not IOException?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-12060268167311.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "Since Java 7 this is legal.",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "If you want to \u003cfont color\u003d\"#008000\"\u003eprotect the variable e from being rewritten\u003c/font\u003e what do you add?\u003cdiv\u003e\u003cimg src\u003d\"paste-12317966205091.jpg\" /\u003e\u003c/div\u003e",
      "answer": "add \u003cfont color\u003d\"#008000\"\u003efinal\u003c/font\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eExample:\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-12416750452891.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eNow the compiler and code hinting tells you where the error is.\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "\u003cdiv\u003eGiven\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-12872016986241.jpg\" /\u003e\u003c/div\u003eWhy is customThrow1 not reporting an error but customThrow2 is?",
      "answer": "NullPointerException is an\u003cfont color\u003d\"#008000\"\u003e unchecked exception\u003c/font\u003e.\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003ecustomThrow2 must be the following:\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-12936441495608.jpg\" /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Unchecked exceptions are all subclasses of \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e ?",
      "answer": "\u003cfont color\u003d\"#008000\"\u003eRuntimeException\u003c/font\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is always imported by default and is not necessary to explicitly import?",
      "answer": "import java.lang.*;",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "How do you \u003cfont color\u003d\"#008000\"\u003esuspend runtime\u003c/font\u003e for 5 seconds (3 commands)?",
      "answer": "\u003cimg src\u003d\"paste-13335873454186.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is the difference between each of the following?\u003cdiv\u003eoverload a method\u003c/div\u003e\u003cdiv\u003eoverride a method\u003c/div\u003e\u003cdiv\u003eoverwrite a method\u003c/div\u003e",
      "answer": "overload\u0026nbsp;\u003cdiv\u003e\u003cimg src\u003d\"paste-14572824035396.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eoverride\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-14697378087034.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eoverwriting methods of an object is more frequently talked about in JavaScript.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eExample:\u003c/div\u003e\u003cdiv\u003eObject.toString \u003d function(){\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e   return \"this function has been overwriten\";\u003c/div\u003e\u003cdiv\u003e};\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Convert the following class so it \u003cfont color\u003d\"#008000\"\u003ecan be executed by in a thread\u003c/font\u003e (4 commands):\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-15187004358709.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-15307263443050.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cb\u003e4 commands\u003c/b\u003e:\u003cbr /\u003e\u003cdiv\u003eimplements\u003c/div\u003e\u003cdiv\u003eRunnable\u003c/div\u003e\u003cdiv\u003e@override\u003c/div\u003e\u003cdiv\u003epublic void run()\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Run the following class in a thread:\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-15302968475754.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-15504831938653.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u0026nbsp;\u003cdiv\u003e\u003cimg src\u003d\"paste-15698105467295.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAdd a Dog.abort() method that will stop execution of Dog.run at the \"//abort here\" comment\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-15582141350348.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eThreads cannot be aborted without custom logic to do so, otherwise run() will execute until completion or until System.exit(0) or the user terminates the program.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Get the thread where the current block is running",
      "answer": "\u003cimg src\u003d\"paste-16058882719764.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is current thread\u003cdiv\u003e\u003cimg src\u003d\"paste-16187731738748.jpg\" /\u003e\u003c/div\u003e",
      "answer": "_go",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "\u003cfont color\u003d\"#008000\"\u003eCompile a class\u003c/font\u003e from the command-line and then \u003cfont color\u003d\"#008000\"\u003eexecute it\u003c/font\u003e.",
      "answer": "\u0026gt; \u003cfont color\u003d\"#008000\"\u003ejavac JavaClass.java\u003c/font\u003e\u003cdiv\u003e\u0026gt; \u003cfont color\u003d\"#008000\"\u003ejava JavaClass\u003c/font\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What format is the resulting *.class file in that the Java compiler produces?",
      "answer": ".class files are in \u003cfont color\u003d\"#008000\"\u003ebyte code\u003c/font\u003e.\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eThis is code that is optimized for the Java Virtual Machine (JVM). The JVM can only run byte code. There are also other languages like Scala that compile to Java byte code.\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-17081084936245.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAdd an inner class InnerPuppy\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-17321603104838.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given Dog.java\u003cdiv\u003e\u003cimg src\u003d\"paste-17733919965291.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAnd in MyApp.java\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-17763984736318.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eWhat is wrong with the instantiation of InnerPuppy\u003c/div\u003e",
      "answer": "InnerPuppy is not public it is only available in Dog.java it would need to be like the following:\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-17897128722572.jpg\" /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-18141941858461.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-18180596564159.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Create a thread that uses an anonamous inner class.\u0026nbsp;",
      "answer": "\u003cimg src\u003d\"paste-18507014078604.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-18502719111308.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eDo the same thing using a \u003cfont color\u003d\"#008000\"\u003elambda\u003c/font\u003e.\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-18665927868490.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-18872086299131.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eReplace actionPerformed() with an anonomous inner class in init()\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-18988050416162.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-19138374271145.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eReplace the inner anonomous class with a \u003cfont color\u003d\"#008000\"\u003elambda\u003c/font\u003e.\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-19219978649704.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "How could you simplify this lambda expession?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-19366007537765.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-19387482374250.jpg\" /\u003e\u003cdiv\u003eRemove the type declaration to make it an implied type declaration.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "\u003cdiv\u003eGiven\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cimg src\u003d\"paste-19473381720123.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eHow could you make this shorter?\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-19512036425752.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eThis is a stylistic choice. Many programmers think that this technique should be used sparingly only in sistuations where a function only has 2 or 3 variables of the same type and some programmers would prefer that you use this style not at all.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Get the system independant directory separator",
      "answer": "\u003cimg src\u003d\"paste-19752554594324.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Open a file steam",
      "answer": "\u003cimg src\u003d\"paste-19821274071147.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is a better way to write the following (\u003cfont color\u003d\"#008000\"\u003etwo changes\u003c/font\u003e):\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-19816979103851.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-19963007991930.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following:\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-19958713024634.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eAdd the logic\u003c/font\u003e to read the file contents into a string (\u003cfont color\u003d\"#008000\"\u003e5 lines\u003c/font\u003e)\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-20147691585784.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Fill in the blanks to read input from the keyboard in the console (\u003cfont color\u003d\"#008000\"\u003e6 things\u003c/font\u003e).\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cpre\u003etry (\n        \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e i \u003d \n        new \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e)\n    )\n{\n    int in;\n    char inChar;\n    do {\n        in \u003d i.\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e();\n        inChar \u003d (char) in;\n    } while (\n        (in !\u003d \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e) \u0026amp;\u0026amp; (inChar !\u003d \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e)\n    );\n    i.\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e();\n} catch (Exception e){}\n\u003c/pre\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003etry (\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003eBufferInputStream\u003c/font\u003e i \u003d\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; new \u003cfont color\u003d\"#008000\"\u003eBufferInputStream\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003eSystem.in\u003c/font\u003e)\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; )\u003c/div\u003e\u003cdiv\u003e{\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; int in;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; char inChar;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; do {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; in \u003d i.\u003cfont color\u003d\"#008000\"\u003eread\u003c/font\u003e();\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; inChar \u003d (char) in;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; } while (\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; (in !\u003d \u003cfont color\u003d\"#008000\"\u003e-1\u003c/font\u003e) \u0026amp;\u0026amp; (inChar !\u003d \u003cfont color\u003d\"#008000\"\u003e\u0027\\n\u0027\u003c/font\u003e)\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; );\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; i.\u003cfont color\u003d\"#008000\"\u003eclose\u003c/font\u003e();\u003c/div\u003e\u003cdiv\u003e} catch (Exception e){}\u003c/div\u003e\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "1.) Fill in the blanks to write a string to a file (\u003cfont color\u003d\"#008000\"\u003e7 words\u003c/font\u003e).\u003cdiv\u003e\n\u003cpre\u003e\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e dat \u003d new \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e);\u003cbr /\u003etry (\n        \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e stream \u003d \u003cbr /\u003e        new \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e)\u003cbr /\u003e    )\n{\n    String name \u003d \"1234\";\n    byte[] nameBytes \u003d name.\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e();\u003cbr /\u003e    stream.\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e(nameBytes, 0, nameBytes.length);\u003cbr /\u003e    stream.\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e();\u003cbr /\u003e} catch (Exception e){}\n\u003c/pre\u003e\u003c/div\u003e\n2.) What will happen if the file already exists with the text \"1234567\" in it?",
      "answer": "1.)\n\u003cpre\u003e\u003cfont color\u003d\"#008000\"\u003eFile\u003c/font\u003e dat \u003d new \u003cfont color\u003d\"#008000\"\u003eFile\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e\"filename.txt\"\u003c/font\u003e);\ntry (\n        \u003cfont color\u003d\"#008000\"\u003eFileOutputStream\u003c/font\u003e stream \u003d \n        new \u003cfont color\u003d\"#008000\"\u003eFileOutputStream\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003edat\u003c/font\u003e)\n    )\n{\n    String name \u003d \"1234\";\n    byte[] nameBytes \u003d name.\u003cfont color\u003d\"#008000\"\u003egetBytes\u003c/font\u003e();\n    stream.\u003cfont color\u003d\"#008000\"\u003ewrite\u003c/font\u003e(nameBytes, 0, nameBytes.length);\n    stream.\u003cfont color\u003d\"#008000\"\u003eclose\u003c/font\u003e();\n} catch (Exception e){}\n\u003c/pre\u003e\n\n2.) The file will contain 1234. This overwrites the previous contents of the file. ",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-22720376996037.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAt what point is the file over written?\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-22819161243713.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-22930830393535.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eChange the code to make the string \u003cfont color\u003d\"#008000\"\u003eadd to the end\u003c/font\u003e of the file.\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-23029614641367.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Windows (\u0027\\r\\n\u0027), Linux(\u0027\\n\u0027) and OSX(\u0027\\n\u0027) use different strings to represent line breaks for text files. Get a \u003cfont color\u003d\"#008000\"\u003esystem dependant newline\u003c/font\u003e.\u0026nbsp;",
      "answer": "\u003cpre\u003eString newline \u003d System.getProperty(\"line.separator\");\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "If you run the following in NetBeans to \u003cfont color\u003d\"#008000\"\u003ewhere\u003c/font\u003e will the file be written?\u003cdiv\u003e\u003cimg src\u003d\"paste-23476291240115.jpg\" /\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-23557895618745.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003eIn the root of the project under the files tab.\u0026nbsp;\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the file config.properties\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-23669564768345.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eand the following code:\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-23785528885387.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWrite the code to get the property \u003cfont color\u003d\"#008000\"\u003ewindowHeight\u0026nbsp;\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e3 lines\u003c/font\u003e and \u003cfont color\u003d\"#008000\"\u003eimport\u003c/font\u003e).\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-23901493002452.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the file\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24240795418713.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eand the following code:\u003cbr /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24073291694252.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e1.) Print out the \u003cfont color\u003d\"#008000\"\u003econtents\u003c/font\u003e of config.properties (\u003cfont color\u003d\"#008000\"\u003e1 line\u003c/font\u003e).\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e2.) What will the \u003cfont color\u003d\"#008000\"\u003eoutput\u003c/font\u003e be?\u003c/div\u003e",
      "answer": "\u003cdiv\u003e1.)\u003c/div\u003e\u003cimg src\u003d\"paste-24172075942075.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e2.) Results in the following:\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24227910516786.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following code:\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24378234372293.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eChange and save a property (\u003cfont color\u003d\"#008000\"\u003e4 lines\u003c/font\u003e).\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-24494198489387.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following code and file:\u003cdiv\u003e\u003cimg src\u003d\"paste-24489903522091.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24824910970969.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eBy defaut, what will \u0026nbsp;the contents of config.properties look like?\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-24726126723193.jpg\" /\u003e\u003cdiv\u003eThe text \"updated\" has been added as a comment along with the date the file was updated. The property windowWidth has been updated as well.\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following code:\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-24885040513217.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eAdd a new property\u003c/font\u003e and \u003cfont color\u003d\"#008000\"\u003esave it\u003c/font\u003e to the file (\u003cfont color\u003d\"#008000\"\u003e4 lines\u003c/font\u003e).\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-24988119728424.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does JAX-WS stand for?",
      "answer": "Java API for XML Web Services.",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does SOAP stand for?",
      "answer": "Simple Object Access Protocol (SOAP)",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is the relationship between SOAP and JAX-WS.",
      "answer": "JAX-WS supports web services that can be implemented using SOAP or REST",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does REST stand for?",
      "answer": "Representational State Transfer (REST)",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Define an interface called \u003cfont color\u003d\"#008000\"\u003eSquareRootServer\u003c/font\u003e with a function \u003cfont color\u003d\"#008000\"\u003egetSquareRoot\u003c/font\u003e that \u003cfont color\u003d\"#008000\"\u003ereturns a double\u003c/font\u003e and \u003cfont color\u003d\"#008000\"\u003etakes a double\u003c/font\u003e as input.",
      "answer": "\u003cimg src\u003d\"paste-25649544691762.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What needs to be added to this interface to make each method accessible via a SOAP web service (\u003cfont color\u003d\"#008000\"\u003e6 lines of code\u003c/font\u003e)?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-25701084299330.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cpre\u003epackage com.designcortex.\u003cfont color\u003d\"#008000\"\u003ews\u003c/font\u003e;\n\n\u003cfont color\u003d\"#008000\"\u003eimport javax.jws.*;\nimport javax.jws.soap.*;\nimport javax.jws.soap.SOAPBinding.*;\u003c/font\u003e\n\n\u003cfont color\u003d\"#008000\"\u003e@WebService\n@SOAPBinding(style \u003d Style.RPC)\u003c/font\u003e\n\npublic interface SquareRootServer {\n    \u003cfont color\u003d\"#008000\"\u003e@WebMethod \u003c/font\u003e\n    double getSquareRoot(double input);\n    \u003cfont color\u003d\"#008000\"\u003e@WebMethod\u003c/font\u003e \n    String getTime();\n}\n\u003c/pre\u003e\n\u003cbr /\u003e\u003cdiv\u003emove code in a package called \u003cfont color\u003d\"#008000\"\u003ews\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003eimport \u003cfont color\u003d\"#008000\"\u003ejavax.jws.*\u003c/font\u003e package\u003c/div\u003e\u003cdiv\u003eimport java web service \u003cfont color\u003d\"#008000\"\u003epackage SOAP\u003c/font\u003e protocols\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e@WebService\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e@SOAPBinding\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e@WebMethod\u003c/font\u003e annotation\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following interface\u003cdiv\u003e\u003cimg src\u003d\"paste-26912265076894.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eAnd a seperate file SquareRootServerImpl.java, fill in the blanks in SquareRootServerImpl.java to create a service implementation bean (4 blanks).\u003c/div\u003e\n\u003cpre\u003epackage com.designcortex.ws;\n\nimport java.util.Date;\nimport javax.jws.*;\n\n@\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e(\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e \u003d \"\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e\")\n\npublic class SquareRootServerImpl \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e SquareRootServer {\n    \n    @Override\n    public double getSquareRoot(double input){\n        return Math.sqrt(input);\n    }\n    \n    @Override\n    public String getTime(){\n        Date now \u003d new Date();\n        return now.toString();\n    }\n}\n\u003c/pre\u003e",
      "answer": "\u003cpre\u003epackage com.designcortex.ws;\n\nimport java.util.Date;\nimport javax.jws.*;\n\n@\u003cfont color\u003d\"#008000\"\u003eWebService\u003c/font\u003e\n(\n    \u003cfont color\u003d\"#008000\"\u003eendpointInterface\u003c/font\u003e \u003d \n    \u003cfont color\u003d\"#008000\"\u003e\"com.designcortex.ws.SquareRootServer\"\u003c/font\u003e\n)\n\npublic class SquareRootServerImpl \u003cfont color\u003d\"#008000\"\u003eimplements\u003c/font\u003e SquareRootServer {\n    \n    @Override\n    public double getSquareRoot(double input){\n        return Math.sqrt(input);\n    }\n    \n    @Override\n    public String getTime(){\n        Date now \u003d new Date();\n        return now.toString();\n    }\n}\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following code fill in the blanks to deploy the web service to http://127.0.0.1:5335/service\u0026nbsp;assuming that SquareRootServerImpl was correctly set up.\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\n\u003cpre\u003epackage com.designcortex;\n\nimport com.designcortex.ws.*;\nimport \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e;\n\npublic class MyApp {\n    public static void main(String[] args)  {\n        SquareRootServerImpl srsi \u003d new SquareRootServerImpl();\n        \u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e;\n    } \n}\n\u003c/pre\u003e",
      "answer": "\u003cpre\u003epackage com.designcortex;\n\nimport com.designcortex.ws.*;\nimport \u003cfont color\u003d\"#008000\"\u003ejavax.xml.ws.*\u003c/font\u003e;\n\npublic class MyApp {\n    public static void main(String[] args)  {\n        SquareRootServerImpl srsi \u003d new SquareRootServerImpl();\n        \u003cfont color\u003d\"#008000\"\u003eEndpoint.publish(\"http://127.0.0.1:5335/service\", srsi);\u003c/font\u003e\n    } \n}\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "If you run the following code from NetBeans how do you terminate it?\u003cpre\u003eEndpoint.publish(\"http://127.0.0.1:5335/service\", serviceImpl);\n\u003c/pre\u003e",
      "answer": "Menu -\u0026gt; run -\u0026gt; Stop Build / Run",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following line of code:\u003cdiv\u003e\u003cpre\u003eEndpoint.publish(\"http://127.0.0.1:5335/service\", serviceImpl);\u003c/pre\u003e\u003c/div\u003eHow do you access the web service definition?",
      "answer": "Go to a browser and load\u003cdiv\u003ehttp://127.0.0.1:5335/service?wsdl\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does WSDL stand for?",
      "answer": "Web Service Definition Layer\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eNote: pronounced wizdull\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "A(n) ... is a software bundle of related state and behavior. ",
      "answer": "object",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "A ... is a blueprint or prototype from which objects are created. ",
      "answer": "class",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... is a collection of methods with no implementation.",
      "answer": "An interface",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... is a namespace for organizing classes and interfaces in a logical manner. ",
      "answer": "A package",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Each ... is allowed to have one direct superclass.",
      "answer": "class",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Each ... has the potential for an unlimited number of subclasses.",
      "answer": "superclass",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Each class is allowed to have one ... superclass.",
      "answer": "direct",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Each class is allowed to have one direct ...",
      "answer": "superclass",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "To create a subclass, use the word ..., followed by the name of the class to inherit from.",
      "answer": "the extends keyword",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "To create a ..., use the extends keyword, followed by the name of the class to inherit from.",
      "answer": "subclass",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Write the first line of\u0026nbsp;\u0026nbsp;code for subclass, MountainBike, that extends Bicycle.",
      "answer": "public class MountainBike extends Bicycle {",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... gives subclasses all the same fields and methods as superclasses. ",
      "answer": "Inheritance",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... forms the object\u0027s interface with the outside world.",
      "answer": "Methods",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... an interface allows a class to become more formal about the behavior it promises to provide. (hint: a verb)",
      "answer": "Implementing",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Write the first line of code for a new class, ACMEBicycle, to implement interface Bicycle.",
      "answer": "class ACMEBicycle implements Bicycle {",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Generally, ... contains only a group of related methods with empty bodies. ",
      "answer": "an interface",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "If a class claims to implement an interface, all methods defined by that interface ... before the class will successfully compile.",
      "answer": "must appear in its source code",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "All objects have the capacity for ...",
      "answer": "state (fields) and behavior (methods)",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... represent an object\u0027s behavior.",
      "answer": "Methods",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... represent an object\u0027s state.",
      "answer": "Fields or Member variables",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Hiding internal state and requiring all interaction to be performed through an object\u0027s methods is known as ...",
      "answer": "data encapsulation",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "... is an instance of a class.",
      "answer": "An object",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "API stands for ... ",
      "answer": "Application Programming Interface",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Create a public class called \u003cfont color\u003d\"#008000\"\u003eAnimal\u003c/font\u003e in the package \u003cfont color\u003d\"#008000\"\u003ecom.designcortex\u0026nbsp;\u003c/font\u003e",
      "answer": "\u003cimg src\u003d\"paste-1026497183816.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Add a \u003cfont color\u003d\"#008000\"\u003econstructor\u003c/font\u003e with the parameter \u003cfont color\u003d\"#008000\"\u003eweight\u003c/font\u003e\u0026nbsp;to the class and assign it to a class \u003cfont color\u003d\"#008000\"\u003eprivate field (member)\u003c/font\u003e called weight.\u003cdiv\u003e\u003cbr\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u003cimg src\u003d\"paste-1022202216520.jpg\" /\u003e\u003c/font\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-1374389534867.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-2087354106043.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eWhat is the output when you call the following:\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-1971389988885.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "The output is\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eAnimal constructor called\u003c/font\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eDog constructor called\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eThis is because the parent class has no parameters so super() is automatically called before the child class\u0027 constructor.\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is wrong with the following?\u003cdiv\u003e\u003cimg src\u003d\"paste-2224793059509.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eHow do you fix it?\u003c/div\u003e",
      "answer": "Add super() at the top of the constructor.\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-2323577307334.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eSuper can only be used at the top of the constructor.\u0026nbsp;\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is wrong with the following in the file Dog.java:\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-2478196129949.jpg\" /\u003e\u003cbr\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "Animal needs to be in its own file Animal.java or remove the public word inorder to change to the following:\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-2576980377658.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eThis makes it so that Animal is only accessible to the Dog class.\u003cbr\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Convert an Integer object to a primative\u003cpre\u003eInteger a \u003d new Integer(1024);\u003c/pre\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-2770253905972.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Convert a number represented as a string to a primative integer\u003cpre\u003eString a \u003d \"1024\";\u003c/pre\u003e\u003cbr /\u003e",
      "answer": "\u003cimg src\u003d\"paste-2950642532383.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Create a 10 by 10 two dimentional array of booleans called \u003cfont color\u003d\"#008000\"\u003epayOffMatrix\u003c/font\u003e",
      "answer": "\u003cpre\u003eboolean [] [] \u003cfont color\u003d\"#008000\"\u003epayOffMatrix\u003c/font\u003e \u003d new boolean[10][10];\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Create a list that holds a maximum of 10 Strings called \u003cfont color\u003d\"#008000\"\u003enames\u003c/font\u003e.",
      "answer": "\u003cimg src\u003d\"paste-3371549327385.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eArrays have a set length at the time of instantiation.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Create an \u003cfont color\u003d\"#008000\"\u003earray\u003c/font\u003e (called names) of 3 strings \"joe\", \"john\", \"paul\" at the time of intantiation.",
      "answer": "\u003cimg src\u003d\"paste-3637837299751.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the class Dog\u0026nbsp;\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-3809635991634.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eCreate an array of Dog objects at the time of instantiation.\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-3865470566422.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is the difference between a parameter and an argument?",
      "answer": "A parameter is the variable which is part of the method’s signature (method declaration). An argument is an expression used when calling the method.",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eint result \u003d 12 % 10;\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003eWhat is result?\u003cbr\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cdiv\u003e2\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e12 / 10 has a remainder of 2. % is the modulus operator.",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does each appended at the end of a number literal mean?\u003cdiv\u003ea.) 10.01F\u003c/div\u003e\u003cdiv\u003eb.) 10L\u003c/div\u003e\u003cdiv\u003ec.) 10.01D\u003c/div\u003e",
      "answer": "\u003cdiv\u003e\u003cimg src\u003d\"paste-4294967296097.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is wrong with the following:\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-4372276707352.jpg\" /\u003e\u003c/div\u003e",
      "answer": "\u003cdiv\u003e\u003cimg src\u003d\"paste-4488240824347.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e10.01 is a double by default and is being converted to a float. Doubles are larger than floats so the compiler is making sure that you don\u0027t loose any precision during the conversion.\u0026nbsp;Of course in this case you wouldn\u0027t loose any precision but the compiler uses brute force rules, not case by case checking. ",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is wrong with this?\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-4548370366482.jpg\" /\u003e\u003c/div\u003e",
      "answer": "Only long integers support underscore notation\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-4569845202963.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eNote:\u003c/div\u003e\u003cdiv\u003eThis notation is only supported in Java 7+\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Declare an \u003cfont color\u003d\"#008000\"\u003earray of Strings\u003c/font\u003e that does not have a fixed length and \u003cfont color\u003d\"#008000\"\u003eadd one element\u003c/font\u003e.",
      "answer": "\u003cimg src\u003d\"paste-6210522710050.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What is the disadvantage of not using a generic (the element type)?\u003cbr\u003e\u003cpre\u003eArrayList s \u003d new ArrayList();\u003c/pre\u003e",
      "answer": "\u003cdiv\u003eCatches type errors at compile time.\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003eA generic type definition like the following:\u003cpre\u003eArrayList\u0026lt;String\u0026gt; s \u003d new ArrayList\u0026lt;String\u0026gt;();\u003c/pre\u003eAllows the compiler to make sure the list only contains strings. ",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-6545530159171.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eWhat is \u003cfont color\u003d\"#008000\"\u003eresult\u003c/font\u003e?\u003c/div\u003e",
      "answer": "2\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eThe initial capacity ( public ArrayList(int initialCapacity) ) of the list only preallocates memory. It does not affect the size of the list.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-6884832575539.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003eRetrieve \"\u003cfont color\u003d\"#008000\"\u003eDan\u003c/font\u003e\" from the list.\u003c/div\u003e",
      "answer": "String result \u003d names.get(1);",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-6944962117692.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eTest with an if statement\u003c/font\u003e that a string someName is in names.\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-7060926234679.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-7215545057339.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eDelete \"Dan\"\u003c/font\u003e from the list (two methods)\u003c/div\u003e\u003c/div\u003e",
      "answer": "names.remove(1);\u003cdiv\u003eor\u003c/div\u003e\u003cdiv\u003enames.remove(\"Dan\");\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "\u003cdiv\u003eGiven\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-7413113553014.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003eWhy is the \u003cfont color\u003d\"#008000\"\u003efor statement\u0026nbsp;\u003c/font\u003ereporting an error?",
      "answer": "No generic infront of the type.\u003cdiv\u003e\u003cimg src\u003d\"paste-7572027342869.jpg\" /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-8516920148055.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003euse a for loop to print out all the names\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-8615704395831.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-8667244003406.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eSort\u003c/font\u003e the names alphanumerically.\u0026nbsp;\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-8748848381975.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What does AWT in the java.awt package stand for?",
      "answer": "Abstract Window Toolkit",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the String variables someName and\u0026nbsp;someOtherName \u003cfont color\u003d\"#008000\"\u003etest\u003c/font\u003e if they are equal.",
      "answer": "\u003cimg src\u003d\"paste-9139690405938.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cimg src\u003d\"paste-9216999817342.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eOverride\u003c/font\u003e the type method in Dog so that type returns the String \"Dog\"\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-9315784065117.jpg\" /\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e@Override is a predefined annottion type.\u0026nbsp;Annotations, a form of metadata, provide data about a program for the following uses:\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; Information for the compiler\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; Compile-time and deployment-time processing\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; Runtime processing\u0026nbsp;\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; (Some annotations are available to be examined at runtime.)\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-9384503541810.jpg\" /\u003e\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eAdd a method that returns a String.\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-9440338116689.jpg\" /\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Make the following work by writing the classes \u003cfont color\u003d\"#008000\"\u003eDog\u003c/font\u003e and \u003cfont color\u003d\"#008000\"\u003eAnimal\u003c/font\u003e. What is this \u003cfont color\u003d\"#008000\"\u003ecalled\u003c/font\u003e?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cimg src\u003d\"paste-9766755631138.jpg\" /\u003e\u003c/div\u003e\u003c/div\u003e",
      "answer": "\u003cimg src\u003d\"paste-9865539878987.jpg\" /\u003e\u003cdiv\u003e\u003cdiv\u003eStatic Nested Class\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eAs with class methods and variables, a static nested class is associated with its outer class. And like static class methods, a static nested class cannot refer directly to instance variables or methods defined in its enclosing class: it can use them only through an object reference.\u003c/div\u003e\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "How do you know you can use the result of entrySet()  to print a list?\u003cbr\u003e\u003cbr\u003eHow do you know you can use \"for\" on any given object?\u003cdiv\u003e\u003cbr\u003eExample :\u003cbr\u003e\u003cimg src\u003d\"paste-10054518440013.jpg\" /\u003e\u003c/div\u003e",
      "answer": "The object must impliment the interface Iterable.",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "The minimum code to create a window. Fill in the blanks (7 lines):\u003cpre\u003e\u003cdiv\u003e\u003cdiv\u003eimport \u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e;\u003c/div\u003e\u003cdiv\u003epublic class MyApp extends \u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e{\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public MyApp(){\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e(\"Learn Java Frame\");\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; this.\u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e(350,125);\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; this.\u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e(JFrame.EXIT_ON_CLOSE);\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; this.\u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e(true);\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003cdiv\u003e\u003cbr\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public static void main(String[] args) \u0026nbsp;{\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003e_____;\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e",
      "answer": "\u003cpre\u003eimport \u003cfont color\u003d\"#008000\"\u003ejavax.swing.*\u003c/font\u003e;\u003cbr\u003epublic class MyApp extends \u003cfont color\u003d\"#008000\"\u003eJFrame\u003c/font\u003e{\u003cbr\u003e    \u003cbr\u003e    public MyApp(){\u003cbr\u003e        \u003cfont color\u003d\"#008000\"\u003esuper\u003c/font\u003e(\"Learn Java Frame\");\u003cbr\u003e        this.\u003cfont color\u003d\"#008000\"\u003esetSize\u003c/font\u003e(350,125);\u003cbr\u003e        this.\u003cfont color\u003d\"#008000\"\u003esetDefaultCloseOperation\u003c/font\u003e(JFrame.EXIT_ON_CLOSE);\u003cbr\u003e        this.\u003cfont color\u003d\"#008000\"\u003esetVisible\u003c/font\u003e(true);\u003cbr\u003e    }\u003cbr\u003e\u003cbr\u003e    public static void main(String[] args)  {\u003cbr\u003e        \u003cfont color\u003d\"#008000\"\u003eMyApp frame \u003d new MyApp()\u003c/font\u003e;\u003cbr\u003e    }\u003cbr\u003e    \u003cbr\u003e}\u003cbr\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Fill in the blanks to create a custom swing component:\u003cpre\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003eclass MyComponent extends \u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public MyComponent() {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp;\u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e();\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e",
      "answer": "\u003cpre\u003eclass MyComponent extends \u003cfont color\u003d\"#008000\"\u003eJPanel\u003c/font\u003e {\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public MyComponent() {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003esuper\u003c/font\u003e();\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "In order for the below to work, what interface and function(s) does \"this\" need to implement (3 things - interface,  function override, and event)?\u003cpre\u003e\u003cdiv\u003e\u003cdiv\u003eJButton okBtn \u003d new JButton(\"OK\");\u003c/div\u003e\u003cdiv\u003eokBtn.addActionListener(this);\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e",
      "answer": "\u003cpre\u003epublic class MyApp extends JFrame implements \u003cfont color\u003d\"#008000\"\u003eActionListener\u003c/font\u003e {\u003cbr\u003e    @Override\u003cbr\u003e    public void\u003cfont color\u003d\"#008000\"\u003e actionPerformed(ActionEvent ae)\u003c/font\u003e{\u003cbr\u003e        System.out.println(\"button clicked\");\u003cbr\u003e    }\u003cbr\u003e}\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given the following test for if okBtn was clicked.\u003cpre\u003e\u003cbr /\u003e\u003cdiv\u003e\u003cdiv\u003epublic class MyApp extends JFrame implements ActionListener {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public JButton okBtn \u003d new JButton(\"OK\");\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; @Override\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public void actionPerformed(ActionEvent ae){\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003e________\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003c/div\u003e\u003cdiv\u003e......\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/pre\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003epublic class MyApp extends JFrame implements ActionListener {\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public JButton okBtn \u003d new JButton(\"OK\");\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; @Override\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; public void actionPerformed(ActionEvent ae){\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003cfont color\u003d\"#008000\"\u003eObject source \u003d ae.getSource();\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; if (source \u003d\u003d okBtn){\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; \u003c/font\u003eSystem.out.println(\"button\");\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; }\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u0026nbsp; \u0026nbsp; }\u003c/div\u003e\u003cdiv\u003e......\u003c/div\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Fill in the blank so that you declare an array of object literals.\u003cpre\u003e\u003cdiv\u003eObject [] [] table \u003d \u003cfont color\u003d\"#008000\"\u003e_____\u003c/font\u003e\u003c/div\u003e\u003c/pre\u003e",
      "answer": "\u003cpre\u003e\u003cdiv\u003eObject [] [] table \u003d \u003cfont color\u003d\"#008000\"\u003e{\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp; \u0026nbsp;{ \"A\",\"B\",\"C\"},\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp; \u0026nbsp;{ \"D\",\"E\",\"F\"}\u003c/font\u003e\u003c/div\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003e\u0026nbsp;}\u003c/font\u003e;\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Vocabulary:\u003cdiv\u003eBecause the following is of a fixed length it is said to be a(n) \"\u003cfont color\u003d\"#008000\"\u003e____\u003c/font\u003e\" array.\u003c/div\u003e\u003cdiv\u003eString [] s \u003d new String[10];\u003c/div\u003e",
      "answer": "\u003cfont color\u003d\"#008000\"\u003eImmutable array\u003c/font\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Instantiate a hash map called phonebook with the key being a name and the value being the phone number.",
      "answer": "\u003cpre\u003eHashMap\u0026lt;String,Long\u0026gt; phonebook \u003d new HashMap\u0026lt;String, Long\u0026gt;();\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cpre\u003e\u003cdiv\u003eHashMap\u0026lt;String, Long\u0026gt; phonebook \u003d new HashMap\u0026lt;String, Long\u0026gt;();\u003c/div\u003e\u003c/pre\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eadd an entry\u003c/font\u003e into the phonebook.\u003c/div\u003e",
      "answer": "\u003cpre\u003ephonebook.\u003cfont color\u003d\"#008000\"\u003eput\u003c/font\u003e(\"George Dunbar\", 4065877764L);\n\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cpre\u003e\u003cdiv\u003eHashMap\u0026lt;String, Long\u0026gt; phonebook \u003d new HashMap\u0026lt;String, Long\u0026gt;();\u003c/div\u003e\u003c/pre\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eretrieve a phone number\u003c/font\u003e.\u003c/div\u003e",
      "answer": "\u003cpre\u003eLong number \u003d phonebook.\u003cfont color\u003d\"#008000\"\u003eget\u003c/font\u003e(\"George Dunbar\");\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u0026nbsp;\u003cpre\u003eHashMap\u0026lt;String, Long\u0026gt; phonebook \u003d new HashMap\u0026lt;String, Long\u0026gt;();\u003c/pre\u003e\u003cdiv\u003e\u003cfont color\u003d\"#008000\"\u003eRetrieve a number\u003c/font\u003e and if the key does not exist \u003cfont color\u003d\"#008000\"\u003ereturn -1\u003c/font\u003e.\u003c/div\u003e",
      "answer": "\u003cpre\u003eLong number \u003d phonebook.\u003cfont color\u003d\"#008000\"\u003egetOrDefault\u003c/font\u003e(\"Samwise Gamgee\", -1);\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cpre\u003e\u003cdiv\u003e\u003cdiv\u003eHashMap\u0026lt;String, Long\u0026gt; p \u003d new HashMap\u0026lt;String, Long\u0026gt;();\u003c/div\u003e\u003cdiv\u003ep.put(\"George Dunbar\", 4065705918L);\u003c/div\u003e\u003cdiv\u003ep.put(\"Nicholas Dunbar\", 4065705878L);\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e\u003cdiv\u003eUse a for loop to get each key and value.\u003c/div\u003e",
      "answer": "\u003cpre\u003efor( Map.Entry\u0026lt;String, Long\u0026gt; e : p.entrySet() ){\u003cdiv\u003e\u0026nbsp; \u0026nbsp;String output \u003d e.getKey()+\":\"+e.getValue();\u003cbr /\u003e\u003cdiv\u003e}\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "What arguments does the\u0026nbsp;HashMap constructor take?\u003cdiv\u003e\u003cbr /\u003e\u003cdiv\u003eHashMap p \u003d new HashMap\u003cfont color\u003d\"#008000\"\u003e()\u003c/font\u003e;\u003c/div\u003e\u003c/div\u003e",
      "answer": "HashMap p \u003d new HashMap\u003cfont color\u003d\"#008000\"\u003e(preAllocatedBuckets, percentFullBeforeAllocation)\u003c/font\u003e;\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003eint \u003cfont color\u003d\"#008000\"\u003epreAllocatedBuckets\u003c/font\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv\u003ehow many key-value stores are allocate at the time of instantiation.\u003c/div\u003e\u003cdiv\u003e\u003cbr /\u003e\u003c/div\u003e\u003cdiv\u003efloat \u003cfont color\u003d\"#008000\"\u003eprecentFullBeforeAllocation\u003c/font\u003e\u0026nbsp;\u003c/div\u003e\u003cdiv\u003eif precentFullBeforeAllocation equals .7 then when .7 percent of\u0026nbsp;preAllocatedBuckets are filled allocated another\u0026nbsp;preAllocatedBuckets key-value storage slots.\u0026nbsp;\u003c/div\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    },
    {
      "question": "Given\u003cpre\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cdiv\u003eStack\u0026lt;String\u0026gt; s \u003d new Stack\u0026lt;String\u0026gt;();\u003c/div\u003e\u003cdiv\u003es.push(\"1\");\u003c/div\u003e\u003cdiv\u003es.push(\"2\");\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/pre\u003e\u003cdiv\u003eUse a \u003cfont color\u003d\"#008000\"\u003efor...loop\u003c/font\u003e\u0026nbsp;and an \u003cfont color\u003d\"#008000\"\u003eIterator\u003c/font\u003e to loop through the Stack.\u003c/div\u003e",
      "answer": "\u003cpre\u003efor( Iterator\u0026lt;String\u0026gt; i \u003d s.iterator(); i.hasNext(); ){\u003cdiv\u003e\u0026nbsp; \u0026nbsp; System.out.println(i.next());\n}\u003c/div\u003e\u003c/pre\u003e",
      "probability": 1.0,
      "statCard": {
        "nbTimesSeen": 0,
        "nbTimesCorrect": 0,
        "nbTimesWrong": 0,
        "timesSpent": []
      },
      "tags": []
    }
  ],
  "tags": [],
  "statDeck": {
    "nbTimesOpened": 0,
    "nbTimesCorrect": 0,
    "nbTimesWrong": 0,
    "nbCardsSeen": 0,
    "timesSpent": 0,
    "lastOpened": 1673001650204,
    "creationDate": 1673001650204
  },
  "name": "Java Introduction - designcortex.com ",
  "description": "Please see the \u003ca href\u003d\u0027https://ankiweb.net/shared/info/1588132881\u0027\u003eshared deck page\u003c/a\u003e for more info."
}